*runtime.txt*   Vim-Runtime

==============================================================================
VIM-RUNTIME                                                      *vim-runtime*

A quick reference for some of the shortcuts that I've have installed for various
operations in my Vim configuration.

==============================================================================
                                                                     *HomeGit*
Git shortcuts (prefix <C-g>):

    <C-g><CR>     Open vimagit
    <C-g>l        Show a list of commits, equivalent to `git log`, using FZF
    <leader>gi
    <C-g>i        Rebase interactive

    FZF listing files

    <C-g>f        Show a list of all Git commited files (git ls-files) using FZF
    <C-g>e        Show a list of all uncommited modified Git commited files using FZF
    <C-g>h        Show a list of files modified in `git diff HEAD` using FZF

    FZF for hunks

    <C-g>d        Show a list of hunks modified in `git diff` using FZF
    <C-g>D        Show a list of hunks modified in `git diff HEAD` using FZF
    <C-g>C        Show a list of hunks modified in `git diff --cached` using FZF
    <C-g>j        Show a list of hunks modified in `git diff HEAD~1` using FZF

    Open split views of diffs

    <C-g>o        Split view of `git show HEAD`
    <C-g>p        Split view of the commit currently being cherry-picked
                  (useful during conflict resolution in rebases)
    <C-g>Q        Open up the list of unmerged conflicts in a QuickFix list
    <leader>gd    Split view of `git diff HEAD`
    <leader>gD    Split view of `git diff HEAD --cached` or what to be commited)

  Various operations:

    <C-g>c        Do a 'git checkout' to another branch
    <C-g>a        Do `git commit -a` using vim-fugitive
    <C-g>AA       Do `git commit --amend -a` using vim-fugitive
    <C-g>PP       Do `git push` so that tracking branch is updated
    <C-g>y        Do `git commit` using vim-fugitive
    <C-g>k        Reset to previous commit and unstage current commit changes
                  (the reversal of `git commit`)

  Related to current file:

    <C-g>L        Show a list of commits (`git log`) for the current file using
                  FZF
    <C-g>r        Unstage current file (equivalent to a `git reset` on the file)

  Hunk related:

    <C-g><Down>   Go down to closest unstaged hunk
    <C-g><Up>     Go up to closest unstaged hunk

    Opertions:

    <C-g><Backspace>  Equivalent to a `checkout -p` of the hunk related
                      to the cursor position and `git diff HEAD~1`. Effectively,
                      a revert of a specific change from `git diff HEAD~1`. Handy
		      after using `<C-g>j`.
    <C-g><Del>        Delete unstaged current hunk
    <C-g><Ins>        Stage current hunk

  Conflict hunk related:

    <C-g>b        Go to previous conflict hunk
    <C-g>t        Go to next conflict hunk

    Operations:

    <C-g>q<Del>   Take none of the changes
    <C-g>q<Up>    Take the upper one
    <C-g>q<Down>  Take the lower one
    <C-g>q<CR>    Take both of them

==============================================================================
                                                                     *HomeFZF*
FZF shortcuts (prefix <C-g>):

    <leader>ff    Files
    <leader>fg    GFiles
    <leader>fs    GFiles?
    <leader>fb    Buffers
    <leader>fl    BLines
    <leader>ft    BTags
    <leader>fL    Lines
    <leader>fT    Tags
    <leader>fm    Marks
    <leader>fM    Maps
    <leader>fw    Windows
    <leader>fh    History
    <leader>f:    History:
    <leader>:     History:
    <leader>f/    History/
    <leader>/     History/
    <leader>f?    Helptags
    <leader>?     Helptags
    <leader>fc    BCommits
    <leader>fC    Commits
    <leader>fv    Commands

In FZF:

    Tab - select and move cursor down
    Shift-tab - select and move cursor up (for some reason,
	neovim doesn't support the key)
    <C-a> / <A-a> - select all
    <C-d> / <A-d> - deselect all
    <Return> - open selected entries
    <C-x> - horizontal splits
    <C-v> - vertical splits
    <C-t> - tags splits
